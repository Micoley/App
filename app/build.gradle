apply plugin: 'com.android.model.application'


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def opencvDir = properties.getProperty('opencv.dir')

model {
    repositories {
        libs(PrebuiltLibraries) {
            prebuilt {
                headers.srcDir "src/main/tangoLibs"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("src/main/tangoLibs/libtango_client_api.so")
                }
            }
        }
    }
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.3"

        defaultConfig {
            applicationId = "hfu.tango.main.mainapp"
            minSdkVersion.apiLevel = 19
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0"
        }
        ndk {
            moduleName = "native"
            cppFlags.add("-std=c++11")
            cppFlags.add("-fexceptions")
            cppFlags.add("-I${file(opencvDir)}".toString())
            ldLibs.addAll(["android", "EGL", "GLESv2", "dl", "log", "z"])
            stl ="gnustl_shared"
        }
        productFlavors {
            create("armv7") {
                ndk.with {
                    abiFilters.add("armeabi-v7a")

                    File curDir = file('./')
                    curDir = file(curDir.absolutePath)
                    String libsDir = curDir.absolutePath + "/src/main/jniLibs/armeabi-v7a/"
                    ldLibs.add(libsDir + "libopencv_core.a")
                    ldLibs.add(libsDir + "libopencv_highgui.a")
                    ldLibs.add(libsDir + "libopencv_imgproc.a")
                    ldLibs.add(libsDir + "libopencv_java3.so")
                    ldLibs.add(libsDir + "libopencv_ml.a")
                    ldLibs.add(libsDir + "libopencv_ts.a")
                }
            }
        }
        sources {
            main {
                jni {
                    dependencies {
                        library "prebuilt"
                    }
                }
            }
        }
        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-rules.txt'))
            }
        }
        allprojects {
            repositories {
                jcenter()
                flatDir {
                    dirs 'libs'
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile project(':openCVLibrary310')
    compile files('libs/TangoSDK_Mira_Java.jar')
    compile(name:'TangoSupport_Okul_Java', ext:'aar')
    compile 'com.android.support:design:23.4.0'

}